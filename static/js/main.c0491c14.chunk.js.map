{"version":3,"sources":["Components/QuestionScreen/QuestionScreen.module.css","Components/Timer/Timer.js","Components/IntroScreen/IntroScreen.js","Components/QuestionScreen/QuestionScreen.js","Components/EndScreen/EndScreen.js","App.js","reportWebVitals.js","index.js","Components/IntroScreen/IntroScreen.module.css","Components/EndScreen/EndScreen.module.css"],"names":["module","exports","timer","IntroScreen","handleStartButton","difficultySelected","handleDifficulty","className","classes","screenContainer","screenInnerContainer","quizHeader","descriptionQuiz","inputSection","inputGroup","onChange","e","target","value","id","type","name","htmlFor","onClick","startButton","disabled","Timer","seconds","resetTimer","pauseTimer","timeElapsedFunc","timerResetSuccess","useState","counter","setCounter","clearTimeout","useEffect","setTimeout","toString","padStart","QuestionScreen","setActiveScreen","setActiveQuestion","questionData","activeQuestionID","setAnswer","answersMarked","filteredQuestion","setFilteredQuestion","disableInput","setDisableInput","timerProps","setTimerProps","resetForm","filterQuestion","qID","length","setNextView","prevState","handleAnswerInput","question","answerMarked","correct_answer","setClass","choice","eachOption","isCorrect","isInCorrect","Object","keys","questionContainer","dangerouslySetInnerHTML","__html","choicesCon","incorrect_answers","sort","map","item","index","checked","successMsg","errorMsg","EndScreen","setQuestionBank","setAnswersMarked","setActiveQuestionID","totalScore","setTotalScore","correctAnswers","filter","eachAnswerObj","endScreenHeader","scoreSection","actionBtns","App","difficulty","setDifficulty","activeScreen","questionBank","axios","get","toLowerCase","then","response","data","catch","error","alert","console","log","results","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0491c14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"isCorrect\":\"QuestionScreen_isCorrect__398hV\",\"isInCorrect\":\"QuestionScreen_isInCorrect__1bef4\",\"eachOption\":\"QuestionScreen_eachOption__3_19b\",\"questionContainer\":\"QuestionScreen_questionContainer__18PpU\",\"screenContainer\":\"QuestionScreen_screenContainer__23rOG\",\"screenInnerContainer\":\"QuestionScreen_screenInnerContainer__sBlny\",\"choicesCon\":\"QuestionScreen_choicesCon__2yo6E\",\"errorMsg\":\"QuestionScreen_errorMsg__U_WWY\",\"successMsg\":\"QuestionScreen_successMsg__213TI\"};","import React, { useState,useEffect } from 'react';\r\nlet timer\r\nconst Timer = ({seconds,resetTimer,pauseTimer,timeElapsedFunc,timerResetSuccess})=>{\r\n    const [counter,setCounter] = useState(seconds);\r\n    clearTimeout(timer)\r\n    useEffect(() => {\r\n        if(counter>0 && !pauseTimer){\r\n            timer = setTimeout(()=>setCounter(counter=>counter-1),1000);\r\n        }\r\n       \r\n    });\r\n    useEffect(()=>{\r\n        if(counter===0){\r\n            timeElapsedFunc()\r\n        }\r\n    },[counter])\r\n    useEffect(()=>{\r\n        if(resetTimer){\r\n            setCounter(seconds);\r\n        }\r\n        timerResetSuccess()\r\n    },[resetTimer])\r\n    \r\n    \r\n    return(\r\n        <span className={counter<5?'timerRedAlert':'timerNormal'}>{`Time left: ${counter?.toString().padStart(2,0)}`}</span>\r\n    )\r\n}\r\nexport default Timer;","import React from 'react';\r\nimport classes from './IntroScreen.module.css';\r\n\r\nconst IntroScreen = ({handleStartButton,difficultySelected,handleDifficulty})=>{\r\n    \r\n    return(\r\n        <div className={classes.screenContainer}>\r\n            <div className={classes.screenInnerContainer}>\r\n                <div className={classes.quizHeader}>\r\n                    <h1>\r\n                        Computer Science Quiz\r\n                    </h1>\r\n                </div>\r\n                <div className={classes.descriptionQuiz}>\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                    </p>\r\n                </div>\r\n                <div className={classes.inputSection}>\r\n                    <div><h3>Please Select difficulty level:</h3></div>\r\n                    <div className={classes.inputGroup}>\r\n                        <span>\r\n                            <input onChange={(e)=>handleDifficulty(e.target.value)} id=\"easy\" type=\"radio\" value=\"Easy\" name=\"difficultyLevel\"/><label htmlFor=\"easy\">Easy</label>\r\n                        </span>\r\n                        <span>\r\n                            <input onChange={(e)=>handleDifficulty(e.target.value)} id=\"med\" type=\"radio\" value=\"Medium\" name=\"difficultyLevel\"/><label htmlFor=\"med\">Medium</label>\r\n                        </span>\r\n                        <span>\r\n                            <input onChange={(e)=>handleDifficulty(e.target.value)} id=\"hard\" type=\"radio\" value=\"Hard\" name=\"difficultyLevel\"/><label htmlFor=\"hard\">Hard</label>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div onClick={handleStartButton} className = {classes.startButton}><button disabled={!difficultySelected} type=\"button\">Start Button</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default IntroScreen;","import React,{useEffect, useState} from 'react';\r\nimport classes from './QuestionScreen.module.css';\r\nimport Timer from '../Timer/Timer';\r\nconst QuestionScreen = ({setActiveScreen,setActiveQuestion,questionData,activeQuestionID,setAnswer,answersMarked})=>{\r\n    const [filteredQuestion,setFilteredQuestion] = useState({});\r\n    const [disableInput,setDisableInput] = useState(false);\r\n    const [timerProps,setTimerProps] = useState({pauseTimer:false,resetTimer:true})\r\n    useEffect(() => {\r\n\r\n        resetForm();\r\n        filterQuestion(activeQuestionID);\r\n\r\n    }, [activeQuestionID]);\r\n\r\n    const filterQuestion = (qID)=>{\r\n        if(qID<questionData.length && qID >=0 ){\r\n            setFilteredQuestion(questionData[qID])\r\n        }\r\n    }\r\n    const resetForm = ()=>{\r\n        setDisableInput(false);\r\n        \r\n    }\r\n    const setNextView = ()=>{\r\n        if(activeQuestionID<questionData.length-1){\r\n            setActiveQuestion(prevState=>prevState+1)\r\n            setTimerProps({resetTimer:true,pauseTimer:false})\r\n\r\n        }else{\r\n            setActiveScreen(3)\r\n        }\r\n    }\r\n    const handleAnswerInput = (e)=>{\r\n        \r\n        setAnswer(prevState =>\r\n            [...prevState,\r\n                {question:filteredQuestion.question,answerMarked:e.target.value,correct_answer:filteredQuestion.correct_answer}\r\n            ]);\r\n            setDisableInput(true);\r\n            setTimerProps(prevState=>({...prevState,pauseTimer:true}))\r\n            setTimeout(setNextView,3000);\r\n    }\r\n    const setClass = (choice)=>{\r\n        if(disableInput && answersMarked[activeQuestionID]){\r\n            if(answersMarked[activeQuestionID]?.correct_answer === choice)\r\n                return `${classes.eachOption} ${classes.isCorrect}`\r\n            else if(answersMarked[activeQuestionID]?.answerMarked === choice)\r\n                return `${classes.eachOption} ${classes.isInCorrect}`\r\n            else\r\n                return `${classes.eachOption}`\r\n        }else\r\n            return `${classes.eachOption}`\r\n        \r\n    }\r\n    const timeElapsed = ()=>{\r\n        setDisableInput(true)\r\n        setAnswer(prevState =>\r\n            [...prevState,\r\n                {question:filteredQuestion.question,answerMarked:null,correct_answer:filteredQuestion.correct_answer}\r\n            ]);\r\n        setTimeout(setNextView,3000);\r\n    }\r\n    const switchResetToFalse = ()=>{\r\n        setTimerProps(prevState=>({...prevState,resetTimer:false}))\r\n    }\r\n    return(\r\n        <div className={classes.screenContainer}>\r\n            {Object.keys(filteredQuestion)?.length?\r\n           \r\n                <div className={classes.screenInnerContainer}>\r\n                    <div className={classes.questionContainer}>\r\n                        <div><span>{`Question ${activeQuestionID+1}: `}</span><span>{<div dangerouslySetInnerHTML={{__html:filteredQuestion.question}} />}</span></div>\r\n                        <div>\r\n                            <Timer resetTimer={timerProps.resetTimer} timeElapsedFunc={timeElapsed} timerResetSuccess={switchResetToFalse} pauseTimer={timerProps.pauseTimer} seconds={10}/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={classes.choicesCon}>\r\n                        {[...filteredQuestion.incorrect_answers,filteredQuestion.correct_answer].sort().map((item,index) => {\r\n                            return(\r\n                                <div className={setClass(item)} key={index}>\r\n                                    <label>\r\n                                        <input disabled={disableInput} checked={answersMarked[activeQuestionID]?.answerMarked === item || false} onChange={handleAnswerInput} name={`options${activeQuestionID}`} type=\"radio\" value={item}/><span>{item}</span>\r\n                                    </label>\r\n                                </div>\r\n                            )\r\n                            \r\n                        })}\r\n                        {disableInput && answersMarked[activeQuestionID] ?<>\r\n                            {answersMarked[activeQuestionID].correct_answer === answersMarked[activeQuestionID].answerMarked?\r\n                                <div className={classes.successMsg}>Congratulations!! Your answer is correct.</div>\r\n                            :\r\n                                <div className={classes.errorMsg}>{`Oops!! The correct answer is: ${answersMarked[activeQuestionID].correct_answer}`}</div>\r\n                                \r\n                        }</>\r\n                        :null}\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            :null}\r\n        </div>\r\n    )\r\n}\r\nexport default QuestionScreen;","\r\nimport React, { useState,useEffect } from 'react';\r\nimport classes from './EndScreen.module.css';\r\nconst EndScreen = ({answersMarked,setActiveScreen,setQuestionBank,setAnswersMarked,setActiveQuestionID})=>{\r\n    const[totalScore,setTotalScore] = useState(\"\");\r\n    useEffect(() => {\r\n        let correctAnswers = answersMarked.filter(eachAnswerObj=>eachAnswerObj.answerMarked === eachAnswerObj.correct_answer);\r\n        setTotalScore(correctAnswers?.length ?? 0);\r\n\r\n        return ()=>{\r\n            \r\n            setAnswersMarked([]);\r\n            setActiveQuestionID(0);\r\n        }\r\n        \r\n    }, []);\r\n    const handleStartOver=()=>{\r\n        setQuestionBank([]);\r\n        setActiveScreen(1);\r\n        \r\n    }\r\n    const handleStartSame = ()=>{\r\n        setActiveScreen(2);\r\n    }\r\n    return(\r\n        <div className={classes.screenContainer}>\r\n            <div className={classes.screenInnerContainer}>\r\n                <div className={classes.endScreenHeader}>\r\n                    <h2>\r\n                        Result\r\n                    </h2>\r\n                </div>\r\n                <div className={classes.scoreSection}>\r\n                    {`Your Score is: ${totalScore} out of ${answersMarked.length}`}\r\n                </div>\r\n                <div className={classes.actionBtns}>\r\n                    <button onClick={handleStartOver}>Start Over</button>\r\n                    <button onClick={handleStartSame}>Attempt Again</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default EndScreen;","import React,{useState} from 'react';\n\nimport './App.css';\nimport IntroScreen  from './Components/IntroScreen/IntroScreen';\nimport QuestionScreen from './Components/QuestionScreen/QuestionScreen'\nimport axios from 'axios';\nimport EndScreen from './Components/EndScreen/EndScreen';\n\n\nfunction App() {\n  const [difficulty, setDifficulty] = useState(null);\n  const [activeScreen,setActiveScreen] = useState(1);\n  const [questionBank,setQuestionBank] = useState([]);\n  const [activeQuestionID,setActiveQuestionID] = useState(0);\n  const [answersMarked,setAnswersMarked] = useState([]);\n  const fetchQuestions = ()=>{\n    axios.get(`https://opentdb.com/api.php?amount=10&category=18&difficulty=${difficulty?.toLowerCase()}&type=multiple`).then(response=>{\n      \n      setQuestionBank(response.data);\n      setActiveScreen(2);\n    }).catch(error=>{\n      alert(\"Some Error occured. Please try again after some time.\")\n      console.log(error)\n    })\n  }\n  return (\n    <div className=\"AppCon\">\n      {activeScreen===1 && (<IntroScreen \n        difficultySelected={difficulty}\n        handleStartButton={fetchQuestions}\n        handleDifficulty={setDifficulty}\n        />\n        \n      )}\n      {activeScreen===2 && questionBank.results?.length && <QuestionScreen setActiveScreen={setActiveScreen}  answersMarked={answersMarked} setAnswer={setAnswersMarked} setActiveQuestion={setActiveQuestionID} activeQuestionID={activeQuestionID} questionData={questionBank.results}/>}\n      {activeScreen===3 && <EndScreen setQuestionBank={setQuestionBank} setAnswersMarked={setAnswersMarked}  setActiveQuestionID={setActiveQuestionID} setActiveScreen={setActiveScreen} answersMarked={answersMarked}/>}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenContainer\":\"IntroScreen_screenContainer__3gcm3\",\"screenInnerContainer\":\"IntroScreen_screenInnerContainer__3j5gR\",\"descriptionQuiz\":\"IntroScreen_descriptionQuiz__1hczv\",\"inputGroup\":\"IntroScreen_inputGroup__Mnnor\",\"startButton\":\"IntroScreen_startButton__I-P1O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenContainer\":\"EndScreen_screenContainer__357Z2\",\"screenInnerContainer\":\"EndScreen_screenInnerContainer__10ybW\",\"actionBtns\":\"EndScreen_actionBtns__lMlMv\"};"],"sourceRoot":""}